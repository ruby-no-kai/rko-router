<% primary_host = ENV.fetch('PRIMARY_HOST', 'rko-router.herokuapp.com') %>

daemon off;
#Heroku dynos have 4 cores.
worker_processes 4;

events {
  use epoll;
  accept_mutex on;
  worker_connections 1024;
}

http {
  gzip on;
  gzip_comp_level 2;
  gzip_min_length 512;

  log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id '
    '$http_x_forwarded_for - $remote_user [$time_local] '
    '"$request" $status $bytes_sent '
    '"$http_referer" "$http_user_agent" "$gzip_ratio"';

  log_format csp_report 'measure#nginx.service=$request_time request_id=$http_x_request_id xff=$http_x_forwarded_for referer="$http_referer" ua="$http_user_agent" csp.report=$request_body';
  map $status $csp_loggable {
      "200"  1;
      default 0;
  }
  map $content_type $csp_bad_content_type {
      default 1;
      "application/json" 0;
      "application/csp-report" 0;
  }

  access_log logs/nginx/access.log l2met;
  error_log logs/nginx/access.log;

  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  #Must read the body in 5 seconds.
  client_body_timeout 5;

  port_in_redirect off;

  proxy_ssl_server_name on;

  rewrite_log <%= ENV.fetch("REWRITE_LOG", 'off') %>;

  server {
    listen <%= ENV["PORT"] %> default_server;
    server_name <%= primary_host %> localhost;

    default_type text/plain;

    location = /_200 {
      access_log off;
      return 200;
    }

    location = /_csp {
      if ($request_method != "POST") {
          return 405;
      }

      if ($csp_bad_content_type) {
          return 415;
      }

      access_log logs/nginx/access.log csp_report;

      # To enable $request_body
      proxy_set_header Host localhost;
      proxy_pass http://localhost:<%= ENV["PORT"] %>/_200;
    }

    location = /_csp_test {
      add_header Content-Security-Policy-Report-Only "default-src https: 'self' 'unsafe-inline' 'unsafe-eval'; report-uri https://<%= primary_host %>/_csp";
      default_type text/html;
      return 200 "<img src='http://img.sorah.jp/s/2018-06-07_1506_89adg.png'>";
    }

    location / {
      if ( $http_x_rko_host = "" ) {
        return 404 "<%= primary_host %>";
      }

      proxy_set_header Host $http_x_rko_host;
      proxy_set_header X-Forwarded-Proto $http_x_rko_xfp;
      proxy_pass http://localhost:<%= ENV["PORT"] %>;
    }
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name regional.rubykaigi.org;

    set $csp_policy "";
    if ($http_x_forwarded_proto = "https") {
      set $csp_policy "default-src https: 'self' 'unsafe-inline' 'unsafe-eval'; report-uri https://<%= primary_host %>/_csp";
    }
    add_header Content-Security-Policy-Report-Only "$csp_policy";

    location ~ ^/oedo03(.*) {
      proxy_pass http://oedo03.herokuapp.com;
#       rewrite ^/oedo03(.*)$ http://oedo03.herokuapp.com/oedo03$1 permanent;
    }

    location ~ ^/osaka02(.*) {
      proxy_pass https://rubykansai.github.io;
    }

    location ~ ^/osaka01(.*) {
      proxy_pass https://rubykansai.github.io;
    }

    location ~ ^/kansai2017(.*) {
      proxy_pass https://rubykansai.github.io;
    }

    #
    # kansai 06, y10y
    #
    location ~ ^/kansai06(.*) {
      proxy_pass https://rubykansai.github.io;
    }

    #
    # kansai 05, y10y
    #
    location ~ ^/kansai05(.*) {
      proxy_pass http://kanrk05.herokuapp.com;
    }

    #
    # chuork 01, y6y
    #
    location ~ ^/chuork01(.*) {
      proxy_pass https://chuork.github.io;
    }

    #
    # okrk01, y6y
    #
    location ~ ^/okrk01(.*) {
      proxy_pass https://okinawarb.github.io;
    }

    #
    # shibuya01, y6y
    #
    location ~ ^/shibuya01(.*) {
    proxy_pass https://shibuyarb.github.io;
    }

    #
    # tokyu13, y6y
    #
    location ~ ^/tokyu13(.*) {
      proxy_pass https://tokyurubykaigi.github.io;
    }

    #
    # tokyu12, y6y
    #
    location ~ ^/tokyu12(.*) {
      proxy_pass https://tokyurubykaigi.github.io;
    }

    #
    # tokyu11, y6y
    #
    location ~ ^/tokyu11(.*) {
      proxy_pass https://tokyurubykaigi.github.io;
    }

    #
    # tokyu09, y6y
    #
    location ~ ^/tokyu09(.*) {
      proxy_pass https://tokyurubykaigi.github.io;
    }

    #
    # tokyu08, y6y
    #
    location ~ ^/tokyu08(.*) {
    proxy_pass https://tokyurb.github.io;
    }

    #
    # kanagawa01, y6y
    #
    location ~ ^/kana01(.*) {
    proxy_pass https://kawasakirb.github.io;
    }

    location ~ ^/oedo04(.*) {
    proxy_pass http://oedo04.herokuapp.com;
    }

    location ~ ^/hamamatsu01(.*) {
    proxy_pass http://rubykaigi-hamamatsu.s3-website-ap-northeast-1.amazonaws.com;
    }

    location ~ ^/(matrk|matsue)08(.*) {
      return 301 http://matsue.rubyist.net/matrk08/;
    }

    location ~ ^/(matrk|matsue)07(.*) {
      return 301 http://matsue.rubyist.net/matrk07/;
    }

    location ~ ^/oedo0[5-7](.*) {
     proxy_pass https://asakusarb.github.io;
    }

    location ~ ^/tokyo11(.*) {
     proxy_pass https://ko1.github.io;
    }

    location ~ ^/tokyu10(.*) {
      proxy_pass https://tokyurubykaigi.github.io;
    }

    location ~ ^/kwsk01(.*) {
      proxy_pass https://kawasakirb.github.io;
    }

    # regional.rubykairi.org
    location / {
      proxy_set_header Host regional-gh.rubykaigi.org;
      proxy_pass https://regional-gh.rubykaigi.org;
    }
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name j.rubykaigi.org;
    rewrite ^ http://jrubykaigi.org$request_uri permanent;
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name yami.rubykaigi.org;

    location = / {
      return 302 http://yami.rubykaigi.org/2011;
    }

    location ~ /2011 {
      return 301 http://yamirubykaigi.wordpress.com;
    }
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name www.rubykaigi.org;

    if ($host ~* www\.(.*)) {
      set $host_without_www $1;
      rewrite ^(.*)$ http://$host_without_www permanent;
    }
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name ~^200[6-8]\.rubykaigi\.org$;

    if ($host ~* ^(\d+)\.(.*)) {
      set $rubykaigi_year $1;
      rewrite ^(.*)$ http://jp.rubyist.net/RubyKaigi$rubykaigi_year permanent;
    }
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name rubykaigi.org;

    set $csp_policy "";
    if ($http_x_forwarded_proto = "https") {
      set $csp_policy "default-src https: 'self' 'unsafe-inline' 'unsafe-eval'; report-uri https://<%= primary_host %>/_csp";
    }
    add_header Content-Security-Policy-Report-Only "$csp_policy";

    location ~ ^/(200[6-8])(.*) {
        set $rubykaigi_year $1;
        rewrite ^(.*)$ http://jp.rubyist.net/RubyKaigi$rubykaigi_year permanent;
    }

    location ~ ^/2009(.*) {
        proxy_pass http://2009-2011.rubykaigi.org;
    }

    location ~ ^/201[0-6](.*) {
        proxy_pass http://2009-2011.rubykaigi.org;
    }

    location ~ ^/assets/(20[1-9][3-9]) {
        rewrite ^/assets/(20[1-9][3-9])(.*)$ http://rubykaigi$1.herokuapp.com/assets/$1$2;
    }

    location ~ ^/2017(.*) {
        include force_https.conf;
        proxy_pass http://2009-2011.rubykaigi.org;
    }

    location ~ ^/2018(.*) {
        include force_https.conf;
        proxy_pass http://rubykaigi2018.herokuapp.com;
    }

    location ~ ^/2019(.*) {
        include force_https.conf;
        # TODO: Archive
        proxy_pass http://rubykaigi2019.herokuapp.com;
    }

    location /2020 {
        include force_https.conf;
        # FIXME: We have to rename our heroku app later
        proxy_pass http://rubykaigi2019.herokuapp.com;
    }

    location ~ ^/\.2006(.*) {
        proxy_pass http://2009-2011.rubykaigi.org;
    }

    location ~ ^/\.2007(.*) {
        proxy_pass http://2009-2011.rubykaigi.org;
    }

    location ~ ^/\.2008(.*) {
        proxy_pass http://2009-2011.rubykaigi.org;
    }

    # current rubykaigi
    location = / {
        return 302 https://rubykaigi.org/2019;
    }

    location ~* /([0-9][0-9][0-9][0-9])?(images|javascripts|stylehseets)/ {
        proxy_pass http://2009-2011.rubykaigi.org;
    }

    location ~* .ico$ {
        proxy_pass http://2009-2011.rubykaigi.org;
    }
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name sapporo.rubykaigi.org;
    location / {
      proxy_set_header Host $host;
      proxy_pass https://ruby-sapporo.github.io;
    }
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name cfp.rubykaigi.org;
    location / {
      return 302 https://rubykaigi-cfp.herokuapp.com;
    }
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name sponsorship.rubykaigi.org;
    location / {
      return 302 https://sponsorships.rubykaigi.org;
    }
  }
}
